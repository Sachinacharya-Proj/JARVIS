# IMPORTING ALL THE ESSENTIAL MODULES HERE
import pyttsx3
import speech_recognition as sr
import datetime
import wikipedia
import webbrowser
import os
import smtplib
from modules.chatterRob import ChatWithMeNow
import datefinder
import winsound
import modules.weatherForcaster as weatherForcaster
import random
import schedule
import modules.qrcodeGenerator as qrcodeGenerator
import modules.qrcodeScanner as qrcodeScanner
import time
import pywhatkit
import math
from email.message import EmailMessage
from tkinter import filedialog
import imghdr
from modules.Send_mail import send_email_smtp
import colorama
from colorama import Fore, Back, Style

msg = EmailMessage()
startOkay = 'okay'

try:
    os.system("cls")
except Exception as e:
    os.system("clear")

morning_greetings_array = [
    'Good morning, Sachin sir!',
    'Hello sir, Very good morning',
    "Good Morming, Sachin Sir, how are you doin'"
    ]
afternoom_greetings_array = [
    'Afternoon, Sachin Sir!',
    "What's Up Sir, Good afternoon",
    "Nice to see you, again Sir"
    ]
evening_greetings_array = [
    'Good evening, Sachin, sir!',
    "Hope you were having a good time, evening sachin sir"
    ]
regular_greetings = [
    "You seems happy sir, today!",
    "You looks great as always",
    "I am so happy to hear from you sir",
    "As always, I am at you service sir"
    ]
wakeingUp_greating = [
    "I'm awake sir, ready for some work!",
    "Yes sir, How can I help you?",
    "I am Refreshed Now with a little Nap",
    "What a wonderful dream that was, anyway How can I help you sir?",
    "Your very own Virtaul Assistance is here for you",
    "Your very own Virtaul Assistance is ready for work"
    ]

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)

def SetAlarmPlease(name, timeString):
    alarmDate = datefinder.find_dates(timeString)
    for match in alarmDate:
        match = match
    match_string = str(match)
    alarm_time = match_string[11:]
    alarm_hour = int(alarm_time[:-6])
    alarm_minutes = int(alarm_time[3:-3])
    # alarm_seconds = int(alarm_time[6:])

    printAndSpeak(f'Alarm Has been set for {match}')
    while True:
        if alarm_hour == datetime.datetime.now().hour:
            if alarm_minutes == datetime.datetime.now().minute:
                AskingToPrint('default', f"Alarm Title: {name}")
                winsound.PlaySound('alarm.m4a', winsound.SND_LOOP)
                if KeyboardInterrupt == True:
                    break
            elif alarm_minutes < int(datetime.datetime.now().minute):
                break

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe(codeTime):
    if codeTime == 0: 
        hour = int(datetime.datetime.now().hour)
        if hour>=0 and hour<12:
            greets = morning_greetings_array[random.randint(0, len(morning_greetings_array) - 1)]
            printAndSpeak(greets)
        elif hour>=12 and hour<18:
            greets = afternoom_greetings_array[random.randint(0, len(afternoom_greetings_array) - 1)]
            printAndSpeak(greets)
        else:
            greets = evening_greetings_array[random.randint(0, len(evening_greetings_array) - 1)]
            printAndSpeak(greets)
        greets = regular_greetings[random.randint(0, len(regular_greetings) - 1)]
        printAndSpeak(greets)
    else:
        greets = wakeingUp_greating[random.randint(0, len(wakeingUp_greating) - 1)]
        printAndSpeak(greets)

def takeCommand():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        print(f"{Fore.GREEN}Listening...{Fore.RESET}")
        r.energy_threshold = 1000
        r.pause_threshold = 1
        audio = r.listen(source)
    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"{Fore.BLUE}\nUser said: {query.lower()} {Fore.RESET}\n")
    except Exception:
        # print(e)
        print(f"{Fore.MAGENTA}Say that again please...sir?{Fore.RESET}")
        return "None"
    return query.lower()

def printAndSpeak(querystring):
    # print(f"{Fore.GREEN}{querystring}{Fore.RESET}")
    AskingToPrint("success", querystring)
    speak(querystring)

def AskingToPrint(color, text):
    if color == 'danger':
        print(f"{Fore.RED}{text}{Fore.RESET}")
    elif color == 'success':
        print(f"{Fore.GREEN}{text}{Fore.RESET}")
    elif color == 'warning':
        print(f"{Fore.MAGENTA}{text}{Fore.RESET}")
    elif color == 'default':
        print(f"{Fore.BLUE}{text}{Fore.RESET}")

def shutDownCommandStarted(code):
    speak('Shutting down in')
    while code > 0:
        speak(f"T {code}")
        print(f"{Fore.RED}Shutting Down in T-{code}{Fore.RESET}", '\r', end="")
        time.sleep(1)
        code -= 1
    os.system('shutdown /p')

def speakLittleFreak(query, startOkay):
    if startOkay == 'okay':
        if 'wikipedia' in query:
            try:
                speak(f'Searching {query}...')
                query = query.replace("wikipedia", "")
                results = wikipedia.summary(query)
                speak("According to Wikipedia")
                printAndSpeak(results)
            except Exception:
                print(f"{Fore.RED}Error Occured! Sorry for Inconvinience")
                speak("Sorry, sir! Something unexcepted happened")
        elif "generate qr code" in query or "create qr code" in query or "generate bar code" in query or "create bar code" in query or "create barcode" in query or "generate barcode" in query:
            speak("You wanna Generate BAR CODE or QR CODE?")
            taken = takeCommand().lower()
            if "qrcode" in taken or "qr code" in query:
                printAndSpeak("String you wanna wrap within in?")
                string = takeCommand()
                speak("Name for Output file?")
                nameFile = takeCommand()
                print(f"{Fore.MAGENTA}It will be coded to QR CODE: {string}{Fore.RESET}")
                speak(f"String {string} will be converted to QR CODE, please check Folder Codes")
                result = qrcodeGenerator.CreateQRCode(string, nameFile)
                if result ==True:
                    speak("QR CODE IS SUCCESSFULLY GENERATED")
            elif "barcode" in query or "bar code" in query:
                speak("IT WILL GENERATE BARCODE ONLY FOR ALPHANUMERIC STRINGS")
                speak("String you wanna wrap within in?")
                string = takeCommand()
                speak("Name of Output file")
                nameFile = takeCommand()
                print(f"{Fore.MAGENTA}It will be coded to BAR CODE: {string}{Fore.RESET}")
                speak(f"String {string} will be converted to BAR CODE, please check Folder Codes")
                result = qrcodeGenerator.BarcodeCreator(string, nameFile)
                if result ==True:
                    speak("BAR CODE IS SUCCESSFULLY GENERATED")
        elif query == 'stop listenning' or query == 'stop listening':
            winsound.Beep(2000, 200)
            startOkay = "no way"
            print(f'{Fore.BLUE}Please, wake me up with command like Hey Jarvis{Fore.RESET}')
            speak('Please, wake me up with command like Hey Jarvis')
            return False
        elif "morning" in query or "evening" in query or "afternoon" in query or"night" in query:
            resultGot = ChatWithMeNow(query)
            if resultGot != None:
                printAndSpeak(resultGot)
            else:
                printAndSpeak('Hi, nice to see you, sir!')
        elif query == "view all command":
            pass
        elif 'open youtube' in query:
            webbrowser.open("https://www.youtube.com/")
            webbrowser.WindowsDefault()
        elif 'stream' in query:
            query = query.replace("stream", "")
            printAndSpeak(f'Searching YouTube for {query}')
            webbrowser.open(f"https://www.youtube.com/results?search_query={query}")
        elif 'play' in query and 'on youtube' in query:
            query = query.replace('play', '')
            query = query.replace('on youtube', '')
            printAndSpeak(f'Playing {query} on YouTube')
            pywhatkit.playonyt(query)
        elif 'open' in query and 'devon ke dev' in query:
            speak('Openning Devon ke Dev mahadev')
            webbrowser.open('https://dkdmtv.blogspot.com/2020/05/devon-ke-dev-mahadev-episode-201-to-400.html')
        elif 'search' in query:
            query = query.replace("search", "")
            printAndSpeak(f'Googling {query}')
            webbrowser.open(f"https://www.google.com/search?q={query}")
        elif 'open stackoverflow' in query or "open stack overflow" in query:
            try:
                speak("Opening Stackoverflow")
                webbrowser.open("https://stackoverflow.com/")
                webbrowser.WindowsDefault()
            except Exception as e:
                AskingToPrint("success",f"Error Occured!{format(e)}")
        elif 'open' in query and 'github' in query:
            speak('Opening your github projects on web')
            webbrowser.open('https://github.com/Sachinacharya-Proj/')
        elif query == 'play music' or query == "play musics":
            music_dir = 'C:\\Users\\Dell\\Music'
            songs = os.listdir(music_dir)
            selected_audio = songs[random.randint(0, len(songs) - 1)]
            if ".mp3" in selected_audio or 'm4a' in selected_audio:
                pass
            else:
                selected_audio = songs[random.randint(0, len(songs) - 1)]
            print(f"{Fore.YELLOW}selected_audio{Fore.RESET}")
            speak(f"Playing {selected_audio}")
            os.startfile(os.path.join(music_dir, selected_audio))
        elif 'open code' in query:
            codePath = "C:\\Users\\Dell\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)
        elif 'open pycharm' in query:
            codePath = "C:\\Program Files\\JetBrains\\PyCharm Community Edition 2020.1.4\\bin\\pycharm64.exe"
            os.startfile(codePath)
        elif query == "turn off the computer" or query == "shutdown the computer" or query == "initiate shutdown command" or query == "shutdown my device" or query == "run shutdown command":
            speak("You've executed Shutdown Command, are you sure, Sir?")
            ask = takeCommand()
            if "yes" in ask or "yep" in ask or "yeah" in ask or "yea" in ask or "sure" in ask or "positive" in ask or "damn yeah" in ask or "hell yeah" in query or 'shut it' in query or 'okay' in query:
                AskingToPrint("warning",'Shutting down process is executed')
                speak('Shutting down process is executed')
                shutDownCommandStarted(5)
        elif "set alarm" in query:
            AskingToPrint("warning","Setting Alarm will pause Services of JARVIS if you wanna take Risk")
            speak("What is the Subject, sir?")
            reason = takeCommand()
            printAndSpeak("For what time should I set Alarm for, sir?")
            time = takeCommand()
            try:
                SetAlarmPlease(reason, time)
            except:
                printAndSpeak('Alarm Has Been Stopped')
        elif "scan code" in query:
            speak("You will need to end all session if you enter this command")
            permission = takeCommand()
            if "okay" in permission or "ok" in permission or "alright" in permission:
                qrcodeScanner.MainFunc()
        elif 'wrap up all' in query or 'close all' in query:
            winsound.Beep(2000, 200)
            hour = int(datetime.datetime.now().hour)
            speak("Closing all session including current one")
            if hour > 22:
                speak("Good night sir")
            os.system("cls")
            exit()
        elif "let us chat" in query or "let's chat" in query:
            speak("Alright sir, let's chat, I am listening sir!")
            while True:
                AskingToPrint("warning",'You are chatting with me\n________________________')
                takingCommand = takeCommand()
                if takingCommand == "exit chatting":
                    AskingToPrint("danger","Nice talks sir!")
                    speak("Nice talks sir!")
                    AskingToPrint("danger","No more Chatting is going on\n_______________________")
                    break
                else:
                    resultGot = ChatWithMeNow(takingCommand)
                    if resultGot != None:
                        printAndSpeak(resultGot)
        elif query == "clear screen":
            speak("Clearing Screen")
            os.system("cls")
        elif query == 'mail' or query == "email" or query == 'send email' or query == 'send a mail' or query == 'send a email' or query == "send mail" or query == 'sendmail' or query == 'sendemail':
            while True:
                printAndSpeak('Alright Sir!')
                printAndSpeak('What is the Subject sir?')
                subject = takeCommand()
                while True:
                    printAndSpeak("Whome you wanna to send to?")
                    to = takeCommand()
                    if to == '':
                        pass
                    elif to != '':
                        to = to.replace(' ', '')
                        printAndSpeak(f"Email {to}")
                        printAndSpeak('Is this email, right?')
                        askAgain = takeCommand().lower()
                        if askAgain == 'yes' or askAgain == 'yep' or askAgain == 'yup' or askAgain == 'yeah' or askAgain == 'sure' or askAgain == 'okay' or askAgain == 'alright':
                            break
                        else:
                            printAndSpeak('Do you want to Type Email manually')
                            askAgain = takeCommand().lower()
                            if askAgain == 'yes' or askAgain == 'yep' or askAgain == 'yup' or askAgain == 'yeah' or askAgain == 'sure' or askAgain == 'okay' or askAgain == 'ok' or askAgain == 'alright':
                                to = input('Enter Email Address: ')
                                break
                            else:
                                pass

                printAndSpeak('What do you wanna say?')
                body = takeCommand()
                printAndSpeak('Do you wanna attach any Attachment?')
                askForPermission = takeCommand().lower()
                if askForPermission == 'yes' or askForPermission == 'okay' or askForPermission=='ok' or askForPermission == "yep" or askForPermission == "yup" or askForPermission == "sure" or askForPermission == "yeah" or askForPermission == "hell yeah" or askForPermission == "ah":
                    option = 'y'
                else:
                    option = 'n'
                textDec = "All okay sir, may I send it Now"
                AskingToPrint('warning', textDec)
                speak(textDec)
                askForPermission = takeCommand()
                if askForPermission == 'send it' or askForPermission == 'send':
                    send_email_smtp(subject, to, body, option)
                elif askForPermission == "don't send" or askForPermission == "do not send" or askForPermission == "don't send it" or askForPermission == "do not send it":
                    pass
                elif askForPermission == "quit mailing" or askForPermission == "discard mailing":
                    break
                elif askForPermission == "change receiver" or askForPermission == "reask receiver":
                    to = takeCommand()
                    printAndSpeak('Are we good now?')
                    permission = takeCommand().lower()
                    if permission == 'okay' or permission == 'yes':
                        send_email_smtp(subject, to, body, option)
                        break
                    else:
                        pass
        elif "what" in query or "find me" in query or "what time is it" in query or "what is" in query or "tell me" in query or "what about" in query:
            try:
                outGain = weatherForcaster.AskForDetails(query)
                printAndSpeak(outGain)
            except Exception:
                AskingToPrint("danger","Returned None")
                speak("Sorry sir, Cannot found the required results!")
                speak("You may need to Update me! Just asking")
        elif query.startswith('find') or query.startswith('web') or query.startswith('ping'):
            if query.startswith('find'):
                query = query.replace('find', '', 1)
            elif query.startswith('web'):
                query = query.replace('web', '', 1)
            else:
                query = query.replace('ping', '', 1)
            try:
                outGain = weatherForcaster.AskForDetails(query)
                if outGain == e:
                    AskingToPrint('danger',"Error")
                else:
                    print(outGain)
                    speak(outGain)
            except Exception:
                AskingToPrint('danger',"Cannot find any results! Nice time")
    return True
numberOfTime = 0
if __name__ == "__main__":
    winsound.Beep(2000, 200)
    winsound.Beep(2000, 200)
    while True:
        query = takeCommand().lower()
        if query == 'hey jarvis' or query == 'hey oracle' or query == 'hey nitro' or query == 'hey mark' or query == 'jarvis' or query == 'nitro' or query == 'mark' or query == 'oracle' or query == 'wake up' or query == 'hi jarvis' or query == 'hi nitro' or query == 'hi oracle' or query == 'hi mark':
            wishMe(numberOfTime)
            numberOfTime = 1
            while True:
                query = takeCommand().lower()
                funcReturn = speakLittleFreak(query, startOkay)
                if funcReturn == True:
                    continue
                else:
                    break

        elif query == 'go to sleep':
            winsound.Beep(2000, 200)
            hour = int(datetime.datetime.now().hour)
            speak("Going to sleep, hear you soon!!!")
            if hour > 22:
                speak("Good night sir")
            os.system("cls")
            exit()
        elif KeyboardInterrupt == True:
            exit()
        else:
            AskingToPrint('danger', "JARVIS is in Hibernation, wake him up with command like Hey Jarvis")
