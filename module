# IMPORTING ALL THE ESSENTIAL MODULES HERE
import pyttsx3 #pip install pyttsx3
import speech_recognition as sr #pip install speechRecognition
import datetime # Defaultly Available
import wikipedia #pip install wikipedia
import webbrowser # Default
import os # Default
import smtplib # Default
from modules.chatterRob import ChatWithMeNow # Custom Module
import datefinder # pip install datefinder
import winsound # pip install winsound or Default
import modules.weatherForcaster as weatherForcaster # Custom Module
import random
import schedule
import modules.qrcodeGenerator as qrcodeGenerator
import modules.qrcodeScanner as qrcodeScanner
import time
import pywhatkit
import math
from email.message import EmailMessage
from tkinter import filedialog
import imghdr

msg = EmailMessage()

startOkay = 'okay'

try:
    os.system("cls")
except Exception as e:
    os.system("clear")

morning_greetings_array = ['Good morning, Sachin sir!', 'Hello sir, Very good morning', "Good Morming, Sachin Sir, how are you doin'"]
afternoom_greetings_array = ['Afternoon, Sachin Sir!', "What's Up Sir, Good afternoon", "Nice to see you, again Sir"]
evening_greetings_array = ['Good evening, Sachin, sir!', "Hope you were having a good time, evening sachin sir"]
regular_greetings = ["You seems happy sir, today!", "You looks great as always", "I am so happy to hear from you sir", "As always, I am at you service sir"]

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices[1].id)
engine.setProperty('voice', voices[0].id)

def SetAlarmPlease(name, timeString):
    alarmDate = datefinder.find_dates(timeString)
    for match in alarmDate:
        print(match)
    match_string = str(match)
    alarm_time = match_string[11:]
    alarm_hour = int(alarm_time[:-6])
    alarm_minutes = int(alarm_time[3:-3])
    alarm_seconds = int(alarm_time[6:])
    print(alarm_hour,alarm_minutes, alarm_seconds)

    while True:
        if alarm_hour == datetime.datetime.now().hour:
            if alarm_minutes == datetime.datetime.now().minute:
                print(f"Alarm Title: {name}")
                winsound.PlaySound('C:\\Users\\Dell\\Desktop\\Alarm\\alarm.m4a', winsound.SND_LOOP)
            elif alarm_minutes < int(datetime.datetime.now().minute):
                break

def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    # print(random.randint(0, len(morning_greetings_array) - 1))
    # print(morning_greetings_array[0])
    if hour>=0 and hour<12:
        greets = morning_greetings_array[random.randint(0, len(morning_greetings_array) - 1)]
        print(greets)
        speak(str(greets))

    elif hour>=12 and hour<18:
        greets = afternoom_greetings_array[random.randint(0, len(afternoom_greetings_array) - 1)]
        print(greets)
        speak(str(greets))

    else:
        greets = evening_greetings_array[random.randint(0, len(evening_greetings_array) - 1)]
        print(greets)
        speak(str(greets))

    greets = regular_greetings[random.randint(0, len(regular_greetings) - 1)]
    print(greets)
    speak(str(greets))

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.energy_threshold = 1000
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"User said: {query.lower()}\n")

    except Exception:
        # print(e)
        print("Say that again please...sir?")
        return "None"
    return query.lower()

my_email_address =  os.environ.get('useremail') or 'Your Email Address'
my_email_password = os.environ.get("userpass") or "INPUT YOUR PASSWORD HERE OR CHANGE WHOLE LINE WITH PASSWD"

def sendEmail(message):
    server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
    server.login(my_email_address, my_email_password)
    server.send_message(message)
    server.close()

def printAndSpeak(querystring):
    print(querystring)
    speak(querystring)

def shutDownCommandStarted(code):
    speak('Shutting down in')
    while code > 0:
        speak(f"T {code}")
        print(f"Shutting Down in T-{code}", '\r', end="")
        time.sleep(1)
        code -= 1
    os.system('shutdown /p')

def goGetDetails():
    speak("Do you want to provide Receiver email via manually or with speech")
    getAnswer = takeCommand()
    if getAnswer == 'speech' or getAnswer == 'voice' or getAnswer == 'with voice' or getAnswer == 'with voice command' or getAnswer == 'voice command' or getAnswer == 'with speech':
        speak('Receiver Email Address, sir?')
        to = takeCommand()
        to = to.replace(' ', '')
    else:
        speak("Then Please provide address manually!")
        to = input('Receiver Address: ')
    speak('What is the Subject?')
    subject = takeCommand()
    speak("What should I say?")
    content = takeCommand()
    printAndSpeak('Do you want to add Attachment?')
    answer = takeCommand()
    if answer == 'yes' or answer == 'yup' or answer == 'yep' or answer == 'sure' or answer == 'okay' or answer == 'ok':
        filearray = filedialog.askopenfilenames()
        for files in filearray:
            with open(files, 'rb') as f:
                file_data = f.read()
                filetype = imghdr.what(f.name)
            breakedArray = str(files).split('/')
            lengthOfArray = len(breakedArray)
            msg.add_attachment(file_data, maintype='image', subtype=filetype, filename=breakedArray[lengthOfArray - 1])
    msg['Subject'] = subject
    msg['From'] = my_email_address
    msg['To'] = to
    msg.set_content(content)
    speak('All okay sir? May I send it now?')
    askPermisison = takeCommand()
    if askPermisison == 'send it' or askPermisison == 'send':
        try:
            speak('Sending email to {}'.format(to))
            sendEmail(msg)
            speak(f"Email has been sent to {to}!")
            return "success"
        except Exception as e:
            print(e)
            speak('Error Occured! wanna retry?')
            askYar = takeCommand()
            if askYar == 'okay' or askYar == 'yes' or askYar == 'yup':
                goGetDetails()
            else:
                printAndSpeak('Email cannot be send!')
                return "error"
    else:
        speak('Message Cancelled, wanna retry?')
        askYar = takeCommand()
        if askYar == 'okay' or askYar == 'yes' or askYar == 'yup':
            goGetDetails()
        else:
            printAndSpeak('Send Email Task has been withdrawn!')
            return "error"

def speakLittleFreak(query, startOkay):
    # while True:
    # query = takeCommand().lower()
    if startOkay == 'okay':
            # query = query.replace('nitro ', '', 1)
        if 'wikipedia' in query:
            try:
                speak(f'Searching {query}...')
                query = query.replace("wikipedia", "")
                results = wikipedia.summary(query)
                speak("According to Wikipedia")
                printAndSpeak(results)
            except Exception:
                print("Error Occured! Sorry for Inconvinience")
                speak("Sorry, sir! Something unexcepted happened")
        elif "generate qr code" in query or "create qr code" in query or "generate bar code" in query or "create bar code" in query or "create barcode" in query or "generate barcode" in query:
            speak("You wanna Generate BAR CODE or QR CODE?")
            taken = takeCommand().lower()
            if "qrcode" in taken or "qr code" in query:
                printAndSpeak("String you wanna wrap within in?")
                string = takeCommand()
                speak("Name for Output file?")
                nameFile = takeCommand()
                print(f"It will be coded to QR CODE: {string}")
                speak(f"String {string} will be converted to QR CODE, please check Folder Codes")
                result = qrcodeGenerator.CreateQRCode(string, nameFile)
                if result ==True:
                    speak("QR CODE IS SUCCESSFULLY GENERATED")
            elif "barcode" in query or "bar code" in query:
                speak("IT WILL GENERATE BARCODE ONLY FOR ALPHANUMERIC STRINGS")
                speak("String you wanna wrap within in?")
                string = takeCommand()
                speak("Name of Output file")
                nameFile = takeCommand()
                print(f"It will be coded to BAR CODE: {string}")
                speak(f"String {string} will be converted to BAR CODE, please check Folder Codes")
                result = qrcodeGenerator.BarcodeCreator(string, nameFile)
                if result ==True:
                    speak("BAR CODE IS SUCCESSFULLY GENERATED")
        elif query == 'stop listenning' or query == 'stop listening':
            winsound.Beep(2000, 200)
            startOkay = "no way"
            printAndSpeak('Please, wake me up with command like Hey Jarvis')
            return False
        elif "morning" in query or "evening" in query or "afternoon" in query or"night" in query:
            resultGot = ChatWithMeNow(query)
            if resultGot != None:
                printAndSpeak(resultGot)
            else:
                printAndSpeak('Hi, nice to see you, sir!')
        elif query == "view all command":
            queryString = "the command lines are\n1. Wikipedia follow by Subject to fetch data from wikipedia regarding Subject\n2. Opne YoutTube: Open youtube in browser\n3. Stream followed by content to view in Youtube\n4. Search followed by keyword to google it\n5. "
            print(queryString)

        elif 'open youtube' in query:
            webbrowser.open("https://www.youtube.com/")
            webbrowser.WindowsDefault()
        elif 'stream' in query:
            query = query.replace("stream", "")
            printAndSpeak(f'Searching YouTube for {query}')
            webbrowser.open(f"https://www.youtube.com/results?search_query={query}")
        elif 'play' in query and 'on youtube' in query:
            query = query.replace('play', '')
            query = query.replace('on youtube', '')
            speak(f'Playing {query} on YouTube')
            print(f'Playing {query} on YouTube')
            pywhatkit.playonyt(query)
        elif 'open' in query and 'devon ke dev' in query:
            speak('Openning Devon ke Dev mahadev')
            webbrowser.open('https://dkdmtv.blogspot.com/2020/05/devon-ke-dev-mahadev-episode-201-to-400.html')
        elif 'search' in query:
            query = query.replace("search", "")
            speak(f'Googling {query}')
            print(f'Googling {query}\n')
            webbrowser.open(f"https://www.google.com/search?q={query}")

        elif 'open stackoverflow' in query or "open stack overflow" in query:
            try:
                speak("Opening Stackoverflow")
                webbrowser.open("https://stackoverflow.com/")
                webbrowser.WindowsDefault()
            except Exception as e:
                print(f"Error Occured!", format(e))
        elif 'open' in query and 'github' in query:
            speak('Opening your github projects on web')
            webbrowser.open('https://github.com/Sachinacharya-Proj/')
        elif query == 'play music' or query == "play musics":
            music_dir = 'C:\\Users\\Dell\\Music'
            songs = os.listdir(music_dir)
            selected_audio = songs[random.randint(0, len(songs) - 1)]
            if ".mp3" in selected_audio or 'm4a' in selected_audio:
                pass
            else:
                selected_audio = songs[random.randint(0, len(songs) - 1)]
            print(selected_audio)
            speak(f"Playing {selected_audio}")
            os.startfile(os.path.join(music_dir, selected_audio))
        elif 'open code' in query:
            codePath = "C:\\Users\\Dell\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codePath)

        elif 'open pycharm' in query:
            codePath = "C:\\Program Files\\JetBrains\\PyCharm Community Edition 2020.1.4\\bin\\pycharm64.exe"
            os.startfile(codePath)
        elif query == "turn off the computer" or query == "shutdown the computer" or query == "initiate shutdown command" or query == "shutdown my device" or query == "run shutdown command":
            speak("You've executed Shutdown Command, are you sure, Sir?")
            ask = takeCommand()
            if "yes" in ask or "yep" in ask or "yeah" in ask or "yea" in ask or "sure" in ask or "positive" in ask or "damn yeah" in ask or "hell yeah" in query or 'shut it' in query or 'okay' in query:
                printAndSpeak('Shutting down process is executed')
                shutDownCommandStarted(5)
        elif "set alarm" in query:
            print("Setting Alarm will pause Services of JARVIS as you wanna take rest")
            speak("Setting Alarm will pause Services of JARVIS as you wanna take rest")
            speak("For what is this alarm?")
            reason = takeCommand()
            speak("For what time should I set Alarm for you, sir?")
            time = takeCommand()
            SetAlarmPlease(reason, time)
        elif "scan code" in query:
            speak("You will need to end all session if you enter this command")
            permission = takeCommand()
            if "okay" in permission or "ok" in permission or "alright" in permission:
                qrcodeScanner.MainFunc()

        elif 'wrap up all' in query or 'close all' in query:
            winsound.Beep(2000, 200)
            hour = int(datetime.datetime.now().hour)
            speak("Closing all session including current one")
            if hour > 22:
                speak("Good night sir")
            os.system("cls")
            exit()
        elif "let us chat" in query or "let's chat" in query:
            speak("Alright sir, let's chat, I am listening sir!")
            while True:
                print('You are chatting with me')
                print("________________________")
                takingCommand = takeCommand()
                if takingCommand == "exit chatting":
                    print("Nice talks sir!")
                    speak("Nice talks sir!")
                    print("No more Chatting is going on")
                    print("_______________________")
                    break
                else:
                    resultGot = ChatWithMeNow(takingCommand)
                    if resultGot != None:
                        speak(resultGot)
                        print(resultGot)
            # print(ChatWithMeNow(str(query)))
        elif query == "clear screen":
            speak("Clearing Screen")
            os.system("cls")
        elif 'send email' in query or "send mail" in query or 'sendmail' in query or 'sendemail' in query:
            goGetDetails()
        elif "what" in query or "find me" in query or "what time is it" in query or "what is" in query or "tell me" in query or "what about" in query:
            try:
                outGain = weatherForcaster.AskForDetails(query)
                print(outGain)
                speak(outGain)
            except Exception:
                print("Returned None")
                speak("Sorry sir, Cannot found the required results!")
                speak("You may need to Update me! Just asking")
        elif query:
            try:
                outGain = weatherForcaster.AskForDetails(query)
                if outGain == e:
                    print("Error")
                else:
                    print(outGain)
                    speak(outGain)
            except Exception:
                print("Cannot find any results! Nice time")

    return True


if __name__ == "__main__":
    winsound.Beep(2000, 200)
    winsound.Beep(2000, 200)
    while True:
        query = takeCommand().lower()
        if query == 'hey jarvis' or query == 'hey oracle' or query == 'hey nitro' or query == 'hey mark' or query == 'jarvis' or query == 'nitro' or query == 'mark' or query == 'oracle' or query == 'wake up' or query == 'hi jarvis' or query == 'hi nitro' or query == 'hi oracle' or query == 'hi mark':
            wishMe()
            while True:
                query = takeCommand().lower()
                funcReturn = speakLittleFreak(query, startOkay)
                if funcReturn == True:
                    continue
                else:
                    break

        elif query == 'go to sleep':
            winsound.Beep(2000, 200)
            hour = int(datetime.datetime.now().hour)
            speak("Going to sleep, hear you soon!!!")
            if hour > 22:
                speak("Good night sir")
            os.system("cls")
            exit()
        else:
            print("JARVIS is in Hibernation, wake him up with command like Hey Jarvis")
            